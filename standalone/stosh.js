"use strict";var stosh=(()=>{var g=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var M=(a,e)=>{for(var t in e)g(a,t,{get:e[t],enumerable:!0})},C=(a,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of S(e))!b.call(a,s)&&s!==t&&g(a,s,{get:()=>e[s],enumerable:!(r=v(e,s))||r.enumerable});return a};var x=a=>C(g({},"__esModule",{value:!0}),a);var I={};M(I,{Stosh:()=>c,stosh:()=>y});var d=class{constructor(){this.store=new Map}get length(){return this.store.size}clear(){this.store.clear()}getItem(e){return this.store.has(e)?this.store.get(e):null}key(e){return Array.from(this.store.keys())[e]??null}removeItem(e){this.store.delete(e)}setItem(e,t){this.store.set(e,t)}},m=class{get length(){return document.cookie?document.cookie.split(";").length:0}clear(){let e=document.cookie.split(";");for(let t of e){let r=t.indexOf("="),s=r>-1?t.substr(0,r).trim():t.trim();s&&this.removeItem(s)}}getItem(e){let t=encodeURIComponent(e)+"=",r=document.cookie.split(";");for(let s of r)if(s=s.trim(),s.indexOf(t)===0)return decodeURIComponent(s.substring(t.length));return null}key(e){let t=document.cookie.split(";");if(e<0||e>=t.length)return null;let r=t[e].indexOf("=");return r>-1?decodeURIComponent(t[e].substr(0,r).trim()):null}removeItem(e){document.cookie=encodeURIComponent(e)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"}setItem(e,t){document.cookie=encodeURIComponent(e)+"="+encodeURIComponent(t)+"; path=/"}},u=class{constructor(e="stosh_idb",t="stosh_default"){this.dbName=e,this.storeName=t,this.dbPromise=this.open()}getStoreName(){return this.storeName}getDbPromise(){return this.dbPromise}open(){return new Promise((e,t)=>{let r=indexedDB.open(this.dbName,1);r.onupgradeneeded=()=>{r.result.createObjectStore(this.storeName)},r.onsuccess=()=>e(r.result),r.onerror=()=>t(new Error("IndexedDB open error: "+r.error))})}async getItem(e){let t=await this.dbPromise;return new Promise((r,s)=>{let i=t.transaction(this.storeName,"readonly").objectStore(this.storeName).get(e);i.onsuccess=()=>r(i.result??null),i.onerror=()=>s(new Error("IndexedDB getItem error: "+i.error))})}async setItem(e,t){let r=await this.dbPromise;return new Promise((s,n)=>{let l=r.transaction(this.storeName,"readwrite").objectStore(this.storeName).put(t,e);l.onsuccess=()=>s(),l.onerror=()=>n(new Error("IndexedDB setItem error: "+l.error))})}async removeItem(e){let t=await this.dbPromise;return new Promise((r,s)=>{let i=t.transaction(this.storeName,"readwrite").objectStore(this.storeName).delete(e);i.onsuccess=()=>r(),i.onerror=()=>s(new Error("IndexedDB removeItem error: "+i.error))})}};function w(a,e,t){let r=-1,s=!1,n=()=>{if(s)throw new Error("next() called multiple times in middleware");s=!0,r++,r<a.length?(s=!1,a[r](e,n)):t(e)};n()}async function f(a,e,t){let r=0,s=!1;async function n(){if(s)throw new Error("next() called multiple times in middleware");if(s=!0,r<a.length){s=!1;let o=a[r++];await o(e,n)}else await t(e)}await n()}var c=class{constructor(e){this.middlewares=new Map([["get",[]],["set",[]],["remove",[]]]);let t=null,r=!1,s=["idb","local","session","cookie","memory"];if(e?.type&&!s.includes(e.type))throw new Error(`Unsupported storage type: ${e.type}`);let n=e?.type===void 0||e?.type.endsWith("Sync"),o=e?.priority||(e?.type?[e.type]:s);if(n&&o.includes("idb")&&(o=o.filter(i=>i!=="idb"),typeof window<"u"&&window.console&&console.warn("[stosh] In synchronous API, idb (IndexedDB) cannot be used. Automatically switching to available storage among local/session/cookie/memory.")),typeof window>"u"){r=!0,this.storage=new d,this.isMemoryFallback=!0,this.namespace=e?.namespace?e.namespace+":":"",this.serializeFn=e?.serialize||JSON.stringify,this.deserializeFn=e?.deserialize||JSON.parse;return}for(let i of o)try{if(i==="idb"?this.idbStorage=new u("stosh_idb",e?.namespace||"stosh_default"):i==="local"?t=window.localStorage:i==="session"?t=window.sessionStorage:i==="cookie"?t=new m:i==="memory"&&(t=new d),t&&i!=="memory"&&i!=="idb"){let l="__stosh_test_key__"+Math.random();t.setItem(l,"1"),t.removeItem(l)}r=i==="memory";break}catch{t=null;continue}t||(t=new d,r=!0),this.storage=t,this.isMemoryFallback=r,this.namespace=e?.namespace?e.namespace+":":"",this.serializeFn=e?.serialize||JSON.stringify,this.deserializeFn=e?.deserialize||JSON.parse,!r&&typeof window<"u"&&window.addEventListener&&window.addEventListener("storage",i=>{if(i.key&&i.key.startsWith(this.namespace)&&this.onChangeCb){let l=i.key.replace(this.namespace,""),h=i.newValue?this.deserialize(i.newValue):null;this.onChangeCb(l,h)}})}static get isSSR(){return typeof window>"u"}use(e,t){if(!this.middlewares.has(e))throw new Error(`Invalid middleware method: ${e}`);let r=this.middlewares.get(e);r&&r.push(t)}async runMiddlewareChain(e,t,r){await f(this.middlewares.get(e)??[],t,r)}runMiddlewareChainSync(e,t,r){w(this.middlewares.get(e)??[],t,r)}async set(e,t,r){if(this.idbStorage){await this.runMiddlewareChain("set",{key:e,value:t,options:r},async s=>{let n={v:s.value,e:s.options?.expire?Date.now()+s.options.expire:void 0};await this.idbStorage.setItem(this.namespace+e,this.serialize(n)),this.triggerChange(e,s.value===void 0?null:s.value)});return}this.setSync(e,t,r)}async get(e){if(this.idbStorage){let t=null,r={key:e};return await this.runMiddlewareChain("get",r,async s=>{let n=await this.idbStorage.getItem(this.namespace+e);if(!n){t=null,s.result=t;return}try{let o=this.deserialize(n);o.e&&Date.now()>o.e?(await this.idbStorage.removeItem(this.namespace+e),t=null):t=o.v}catch{t=null}s.result=t}),t===void 0?null:t}return this.getSync(e)}async remove(e){if(this.idbStorage){await this.runMiddlewareChain("remove",{key:e},async t=>{await this.idbStorage.removeItem(this.namespace+e),this.triggerChange(e,null)});return}this.removeSync(e)}setSync(e,t,r){this.runMiddlewareChainSync("set",{key:e,value:t,options:r},s=>{let n={v:s.value,e:s.options?.expire?Date.now()+s.options.expire:void 0};this.storage.setItem(this.namespace+e,this.serialize(n)),this.triggerChange(e,s.value===void 0?null:s.value)})}getSync(e){let t=null,r={key:e};return this.runMiddlewareChainSync("get",r,s=>{let n=this.storage.getItem(this.namespace+e);if(!n){t=null,s.result=t;return}try{let o=this.deserialize(n);o.e&&Date.now()>o.e?(this.storage.removeItem(this.namespace+e),t=null):t=o.v}catch{t=null}s.result=t}),r.result===void 0?null:r.result}removeSync(e){this.runMiddlewareChainSync("remove",{key:e},t=>{this.storage.removeItem(this.namespace+e),this.triggerChange(e,null)})}getNamespaceKeys(){let e=[];for(let t=0;t<this.storage.length;++t){let r=this.storage.key(t);r&&r.startsWith(this.namespace)&&e.push(r)}return e}stripNamespace(e){return e.startsWith(this.namespace)?e.slice(this.namespace.length):e}async clear(){if(this.idbStorage){let e=await this.idbStorage.dbPromise;return new Promise((t,r)=>{let o=e.transaction(this.idbStorage.getStoreName(),"readwrite").objectStore(this.idbStorage.getStoreName()).clear();o.onsuccess=()=>t(),o.onerror=()=>r(o.error)})}this.clearSync()}clearSync(){let e=this.getNamespaceKeys();for(let t of e)this.storage.removeItem(t),this.triggerChange(this.stripNamespace(t),null)}async has(e){return this.idbStorage?await this.get(e)!==null:this.hasSync(e)}hasSync(e){return this.getSync(e)!==null}async getAll(){if(this.idbStorage){let e=await this.idbStorage.getDbPromise();return new Promise((t,r)=>{let o=e.transaction(this.idbStorage.getStoreName(),"readonly").objectStore(this.idbStorage.getStoreName()).getAllKeys(),i={};o.onsuccess=async()=>{let l=o.result;for(let h of l){let p=await this.get(h);p!==null&&(i[h.replace(this.namespace,"")]=p)}t(i)},o.onerror=()=>r(o.error)})}return this.getAllSync()}getAllSync(){let e={},t=this.getNamespaceKeys();for(let r of t){let s=this.stripNamespace(r),n=this.getSync(s);n!==null&&(e[s]=n)}return e}async batchSet(e){if(this.idbStorage){for(let{key:t,value:r,options:s}of e)await this.set(t,r,s);return}this.batchSetSync(e)}batchSetSync(e){for(let{key:t,value:r,options:s}of e)this.setSync(t,r,s)}async batchGet(e){if(this.idbStorage){let t=[];for(let r of e)t.push(await this.get(r));return t}return this.batchGetSync(e)}batchGetSync(e){return e.map(t=>this.getSync(t))}async batchRemove(e){if(this.idbStorage){for(let t of e)await this.remove(t);return}this.batchRemoveSync(e)}batchRemoveSync(e){for(let t of e)this.removeSync(t)}onChange(e){return this.onChangeCb=e,()=>{this.onChangeCb=void 0}}serialize(e){return this.serializeFn(e)}deserialize(e){return this.deserializeFn(e)}triggerChange(e,t){this.onChangeCb&&this.onChangeCb(e,t)}};function y(a){return new c(a)}y.isSSR=c.isSSR;return x(I);})();
