"use strict";var stosh=(()=>{var R=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var q=(a,e)=>{for(var t in e)R(a,t,{get:e[t],enumerable:!0})},W=(a,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of K(e))!L.call(a,n)&&n!==t&&R(a,n,{get:()=>e[n],enumerable:!(r=z(e,n))||r.enumerable});return a};var V=a=>W(R({},"__esModule",{value:!0}),a);var H={};q(H,{Stosh:()=>T,stosh:()=>N});var m=class{constructor(){this.store=new Map}get length(){return this.store.size}clear(){this.store.clear()}getItem(e){return this.store.get(e)??null}key(e){return Array.from(this.store.keys())[e]??null}removeItem(e){this.store.delete(e)}setItem(e,t){this.store.set(e,t)}},h=class{get length(){return document.cookie?document.cookie.split(";").length:0}clear(){document.cookie.split(";").map(e=>e.trim().split("=")[0]).filter(Boolean).forEach(e=>this.removeItem(decodeURIComponent(e)))}getItem(e){let t=encodeURIComponent(e)+"=",n=document.cookie.split(";").map(s=>s.trim()).find(s=>s.startsWith(t));return n?decodeURIComponent(n.slice(t.length)):null}key(e){let t=document.cookie.split(";");if(e<0||e>=t.length)return null;let[r]=t[e].split("=");return r?decodeURIComponent(r.trim()):null}removeItem(e,t){document.cookie=A(e,"",{...t,expire:"Thu, 01 Jan 1970 00:00:00 GMT"})}setItem(e,t,r){document.cookie=A(e,t,r)}};function A(a,e,t){let r=[`${encodeURIComponent(a)}=${encodeURIComponent(e)}`,`path=${t?.path??"/"}`];if(t?.domain&&r.push(`domain=${t.domain}`),t?.expire){let n=typeof t.expire=="string"?t.expire:typeof t.expire=="number"?new Date(Date.now()+t.expire).toUTCString():t.expire.toUTCString();r.push(`expires=${n}`)}return t?.secure&&r.push("secure"),t?.sameSite&&r.push(`samesite=${t.sameSite}`),r.join("; ")}var M=class{constructor(e){if(typeof indexedDB>"u"||typeof indexedDB.open!="function")throw new Error("[stosh] IndexedDB is not supported or 'open' method is missing in this environment.");this.dbName=`stoshDB_${e}`,this.storeName="stosh_store",this.dbPromise=this.open()}getStoreName(){return this.storeName}getDbPromise(){return this.dbPromise}open(){return new Promise((e,t)=>{try{if(typeof indexedDB>"u"||typeof indexedDB.open!="function")return t(new Error("[stosh] IndexedDB became unavailable or invalid before open call."));let r=indexedDB.open(this.dbName,1);r.onupgradeneeded=n=>{let s=n.target.result;s.objectStoreNames.contains(this.storeName)||s.createObjectStore(this.storeName)},r.onsuccess=n=>{e(n.target.result)},r.onerror=n=>{console.error("[stosh] IndexedDB open request error:",n.target.error),t(n.target.error)}}catch(r){console.error("[stosh] Critical error calling indexedDB.open:",r),t(r)}})}async getItem(e){return this.createTransaction("readonly",(t,r,n)=>{let s=t.get(e);s.onsuccess=()=>r(s.result??null),s.onerror=()=>n(new Error("[stosh] IndexedDB getItem error: "+s.error))})}async setItem(e,t){return this.createTransaction("readwrite",(r,n,s)=>{let o=r.put(t,e);o.onsuccess=()=>n(),o.onerror=()=>s(new Error("[stosh] IndexedDB setItem error: "+o.error))})}async removeItem(e){return this.createTransaction("readwrite",(t,r,n)=>{let s=t.delete(e);s.onsuccess=()=>r(),s.onerror=()=>n(new Error("[stosh] IndexedDB removeItem error: "+s.error))})}async clear(){return this.createTransaction("readwrite",(e,t,r)=>{let n=e.clear();n.onsuccess=()=>t(),n.onerror=()=>r(n.error)})}async getAllKeys(){return this.createTransaction("readonly",(e,t,r)=>{let n=e.getAllKeys();n.onsuccess=()=>t(n.result),n.onerror=()=>r(n.error)})}async createTransaction(e,t){let r=await this.dbPromise;return new Promise((n,s)=>{let o=r.transaction(this.storeName,e),i=o.objectStore(this.storeName);t(i,n,s),o.oncomplete=()=>{n(void 0)},o.onerror=()=>s(o.error),o.onabort=()=>s(o.error||new Error("[stosh] Transaction aborted"))})}async batchSet(e){if(e.length)return this.createTransaction("readwrite",(t,r,n)=>{e.forEach(({key:s,value:o})=>{let i=t.put(o,s);i.onerror=()=>{n(i.error),t.transaction.abort()}})})}async batchGet(e){return e.length?this.createTransaction("readonly",(t,r,n)=>{let s=new Array(e.length).fill(null),o=new Map;if(e.forEach((i,c)=>{o.has(i)||o.set(i,[]),o.get(i).push(c)}),o.size===0){r(s);return}o.forEach((i,c)=>{let d=t.get(c);d.onsuccess=()=>{i.forEach(l=>s[l]=d.result??null)},d.onerror=()=>n(d.error)}),t.transaction.addEventListener("complete",()=>r(s))}):[]}async batchRemove(e){if(e.length)return this.createTransaction("readwrite",(t,r,n)=>{e.forEach(s=>{let o=t.delete(s);o.onerror=()=>{n(o.error),t.transaction.abort()}})})}};var p="idb",S="local",f="session",w="cookie",y="memory",x=[p,S,f,w,y],F=[S,f,w,y],b="get",_="set",O="remove";function C(a,e,t){if(a.length===0)return t(e);let r=-1;function n(s){if(s<=r)throw new Error("next() called multiple times");r=s;let o=a[s]||t;if(o)try{return Promise.resolve(o(e,()=>n(s+1))).catch(i=>{throw console.error("[stosh] Middleware error:",i),i})}catch(i){throw console.error("[stosh] Middleware error:",i),i}}return n(0)}function U(a,e,t){if(a.length===0)return t(e);let r=-1;function n(s){if(s<=r)throw new Error("next() called multiple times");r=s;let o=a[s]||t;if(o)try{o(e,()=>n(s+1))}catch(i){throw console.error("[stosh] Middleware error:",i),i}}n(0)}function v(a,e){return a.startsWith(e)?a.slice(e.length):a}function k(a,e){return Array.from({length:a.length}).map((t,r)=>a.key(r)).filter(t=>!!t&&t.startsWith(e))}function $(a){try{let e="__stosh_test_key__"+Math.random();return a.setItem(e,"1"),a.removeItem(e),!0}catch{return!1}}function B(a){for(let e of a){let t=null;if(e===S?t=typeof window<"u"?window.localStorage:null:e===f?t=typeof window<"u"?window.sessionStorage:null:e===w?t=typeof window<"u"?new h:null:e===y&&(t=new m),t&&$(t))return t}return new m}function P(a,e){return!a&&!e?{}:a?e?{...a,...e}:{...a}:{...e}}function D(a){let e=r=>typeof r=="function"&&(r.constructor?.name==="AsyncFunction"||/^async /.test(r.toString()));this.middleware?.[a]?.some(e)&&console.warn("[stosh] An async middleware is registered to a sync method. Unexpected behavior may occur when using setSync/getSync/removeSync, etc.")}function u(a,e,t){if(a){if(e)throw new Error(`[stosh] ${t} is not supported with IndexedDB storage.`);console.warn(`[stosh] ${t} called when IndexedDB is the primary storage. Operation will use the synchronous fallback storage (e.g., localStorage, memory).`)}}var T=class a{constructor(e){this.middleware={get:[],set:[],remove:[]};this.cachedMiddleware={get:[],set:[],remove:[]};this.onChangeCbs=[];this.namespace=e?.namespace?e.namespace+":":"",this.strictSyncFallback=e?.strictSyncFallback??!1,this.serializeFn=e?.serialize||JSON.stringify,this.deserializeFn=e?.deserialize||JSON.parse,this.middleware={get:[],set:[],remove:[]};let t=null,r=!1,n=[p,S,f,w,y];if(e?.type&&!n.includes(e.type))throw new Error(`Unsupported storage type: ${e.type}`);let s=e?.type&&e.type!==p?!0:e?.priority?e.priority.every(i=>i!==p):!1,o=e?.priority||(e?.type?[e.type]:s?F:x);if(a.isSSR){r=!0,this.storage=new m,this.isMemoryFallback=!0;return}for(let i of o)try{if(i===p&&!s){this.idbStorage=new M(e?.namespace||"stosh_default");let c=o.filter(d=>d!==p);t=B(c);break}else i===S?t=window.localStorage:i===f?t=window.sessionStorage:i===w?t=new h:i===y&&(t=new m);if(t&&i!==y&&i!==p){let c="__stosh_test_key__"+Math.random();t.setItem(c,"1"),t.removeItem(c)}if(t){r=i===y;break}}catch{t=null}t||(t=new m,r=!0),this.storage=t,this.isMemoryFallback=r,!a.isSSR&&window.addEventListener&&(this.storage===window.localStorage||this.storage===window.sessionStorage)&&window.addEventListener("storage",i=>{if(i.key&&i.key.startsWith(this.namespace)){let c=v(i.key,this.namespace),d=null;if(i.newValue)try{let l=this.deserializeFn(i.newValue);(!l.e||Date.now()<=l.e)&&(d=l.v)}catch(l){console.error("[stosh] Failed to deserialize storage event value:",l)}this.triggerChange(c,d)}})}static get isSSR(){return typeof window>"u"}use(e,t,r){let n=this.middleware[e];if(n.some(o=>o.fn===t))return console.warn("[stosh] The same middleware has already been registered."),()=>{};let s={fn:t,options:r};if(r?.prepend)n.unshift(s);else if(r?.append)n.push(s);else{let o=n.findIndex(i=>i.options?.append);o===-1?n.push(s):n.splice(o,0,s)}return this.cachedMiddleware[e]=n.map(o=>o.fn),()=>{let o=n.findIndex(i=>i.fn===t);o>=0&&(n.splice(o,1),this.cachedMiddleware[e]=n.map(i=>i.fn))}}async runMiddleware(e,t,r){t.isSync=!1;let n=this.cachedMiddleware[e];await C(n,t,r)}runMiddlewareSync(e,t,r){t.isSync=!0;let n=this.cachedMiddleware[e];U(n,t,r)}async _getInternal(e){let t={key:e},r=null;return await this.runMiddleware(b,t,async n=>{let s=this.namespace+n.key,o=null;if(this.idbStorage?o=await this.idbStorage.getItem(s):o=this.storage.getItem(s),!o)r=null;else try{let i=this.deserializeFn(o);i.e&&Date.now()>i.e?(this.idbStorage?this.idbStorage.removeItem(s).catch(console.error):this.storage.removeItem(s),r=null):r=i.v}catch(i){console.error("[stosh] Failed to deserialize storage value:",i),r=null}n.result=r}),t.result===void 0?null:t.result}_getInternalSync(e){let t={key:e},r=null;return this.runMiddlewareSync(b,t,n=>{let s=this.namespace+n.key,o=this.storage.getItem(s);if(!o)r=null;else try{let i=this.deserializeFn(o);i.e&&Date.now()>i.e?(this.storage.removeItem(s),r=null):r=i.v}catch(i){console.error("[stosh] Failed to deserialize storage value:",i),r=null}n.result=r}),t.result===void 0?null:t.result}validateStorableValue(e){if(typeof e=="function")throw new Error("[stosh] Function type value cannot be stored.");if(!(e===null||typeof e>"u"||typeof e=="string"||typeof e=="number"||typeof e=="boolean"))try{JSON.stringify(e)}catch{throw new Error("[stosh] Circular reference value cannot be stored.")}}getNamespacedKey(e){return this.namespace+e}serializeData(e,t){let r={v:e};return t?.expire&&(r.e=Date.now()+t.expire),this.serializeFn(r)}async _setInternal(e,t,r){this.validateStorableValue(t);let n={key:e,value:t,options:r};await this.runMiddleware(_,n,async s=>{if(s.value===void 0){await this._removeInternal(s.key);return}let o=this.getNamespacedKey(s.key),i=this.serializeData(s.value,s.options);this.storage instanceof h?this.storage.setItem(o,i,s.options):this.idbStorage?await this.idbStorage.setItem(o,i):this.storage.setItem(o,i),this.triggerChange(s.key,s.value)})}_setInternalSync(e,t,r){this.validateStorableValue(t);let n={key:e,value:t,options:r};this.runMiddlewareSync(_,n,s=>{if(s.value===void 0){this._removeInternalSync(s.key);return}let o=this.getNamespacedKey(s.key),i=this.serializeData(s.value,s.options);this.storage instanceof h?this.storage.setItem(o,i,s.options):this.storage.setItem(o,i),this.triggerChange(s.key,s.value)})}async _removeInternal(e,t){let r={key:e,options:t};await this.runMiddleware(O,r,async n=>{let s=this.getNamespacedKey(n.key);this.storage instanceof h?this.storage.removeItem(s,n.options):this.idbStorage?await this.idbStorage.removeItem(s):this.storage.removeItem(s),this.triggerChange(n.key,null)})}_removeInternalSync(e,t){let r={key:e,options:t};this.runMiddlewareSync(O,r,n=>{let s=this.getNamespacedKey(n.key);this.storage instanceof h?this.storage.removeItem(s,n.options):this.storage.removeItem(s),this.triggerChange(n.key,null)})}async set(e,t,r){if(this.idbStorage)await this._setInternal(e,t,r);else return Promise.resolve().then(()=>this._setInternalSync(e,t,r))}async get(e){return this.idbStorage?this._getInternal(e):Promise.resolve().then(()=>this._getInternalSync(e))}async remove(e,t){if(this.idbStorage)await this._removeInternal(e,t);else return Promise.resolve().then(()=>this._removeInternalSync(e,t))}setSync(e,t,r){u(this.idbStorage,this.strictSyncFallback,"setSync"),D.call(this,"set"),this._setInternalSync(e,t,r)}getSync(e){return u(this.idbStorage,this.strictSyncFallback,"getSync"),D.call(this,"get"),this._getInternalSync(e)}removeSync(e,t){u(this.idbStorage,this.strictSyncFallback,"removeSync"),D.call(this,"remove"),this._removeInternalSync(e,t)}clearSync(){u(this.idbStorage,this.strictSyncFallback,"clearSync"),k(this.storage,this.namespace).forEach(t=>{this._removeInternalSync(v(t,this.namespace))})}async clear(){if(this.idbStorage){let e=(await this.idbStorage.getAllKeys()).filter(t=>t.startsWith(this.namespace)).map(t=>v(t,this.namespace));await this.idbStorage.clear(),e.forEach(t=>this.triggerChange(t,null));return}return Promise.resolve().then(()=>this.clearSync())}async has(e){return await this.get(e)!==null}hasSync(e){return u(this.idbStorage,this.strictSyncFallback,"hasSync"),this.getSync(e)!==null}async getAll(){if(this.idbStorage){let e=await this.idbStorage.getDbPromise();return new Promise((t,r)=>{let n=e.transaction(this.idbStorage.getStoreName(),"readonly"),o=n.objectStore(this.idbStorage.getStoreName()).openCursor(),i={};o.onsuccess=async c=>{let d=c.target.result;if(d){let l=d.key;if(l.startsWith(this.namespace)){let E=v(l,this.namespace),G=d.value,I=null;try{let g=this.deserializeFn(G);g.e&&Date.now()>g.e?(this.idbStorage.removeItem(l).catch(console.error),I=null):I=g.v}catch(g){console.error("[stosh] Failed to deserialize storage value:",g),I=null}let Y={key:E,result:I};await this.runMiddleware(b,Y,async g=>{g.result!==null&&g.result!==void 0&&(i[E]=g.result)})}d.continue()}else t(i)},o.onerror=()=>r(o.error),n.onerror=()=>r(n.error)})}return Promise.resolve().then(()=>this.getAllSync())}getAllSync(){u(this.idbStorage,this.strictSyncFallback,"getAllSync");let e={};return k(this.storage,this.namespace).forEach(r=>{let n=v(r,this.namespace),s=this._getInternalSync(n);s!==null&&(e[n]=s)}),e}async batchSet(e,t){if(this.idbStorage){let r=[];for(let{key:s,value:o,options:i}of e){let c=P(t,i),d={key:s,value:o,options:c};await this.runMiddleware(_,d,async l=>{if(l.value===void 0)this.triggerChange(l.key,null);else{let E={v:l.value,e:l.options?.expire?Date.now()+l.options.expire:void 0};r.push({key:this.namespace+l.key,value:this.serializeFn(E)}),this.triggerChange(l.key,l.value)}})}r.length>0&&await this.idbStorage.batchSet(r);let n=e.filter(s=>s.value===void 0).map(s=>this.namespace+s.key);n.length>0&&await this.idbStorage.batchRemove(n);return}return Promise.resolve().then(()=>this.batchSetSync(e,t))}batchSetSync(e,t){u(this.idbStorage,this.strictSyncFallback,"batchSetSync"),e.forEach(({key:r,value:n,options:s})=>{let o=P(t,s);this._setInternalSync(r,n,o)})}async batchGet(e){if(this.idbStorage){let t=e.map(s=>this.namespace+s),r=await this.idbStorage.batchGet(t),n=new Array(e.length).fill(null);for(let s=0;s<e.length;s++){let o=e[s],i=r[s],c=null;if(i)try{let l=this.deserializeFn(i);l.e&&Date.now()>l.e?(this.idbStorage.removeItem(t[s]).catch(console.error),c=null):c=l.v}catch(l){console.error("[stosh] Failed to deserialize storage value:",l),c=null}let d={key:o,result:c};await this.runMiddleware(b,d,async l=>{n[s]=l.result===void 0?null:l.result})}return n}return Promise.resolve().then(()=>this.batchGetSync(e))}batchGetSync(e){return u(this.idbStorage,this.strictSyncFallback,"batchGetSync"),e.map(t=>this._getInternalSync(t))}async batchRemove(e,t){if(this.idbStorage){let r=[];for(let n of e){let s={key:n,options:t};await this.runMiddleware(O,s,async o=>{r.push(this.namespace+o.key),this.triggerChange(o.key,null)})}r.length>0&&await this.idbStorage.batchRemove(r);return}return Promise.resolve().then(()=>this.batchRemoveSync(e,t))}batchRemoveSync(e,t){u(this.idbStorage,this.strictSyncFallback,"batchRemoveSync"),e.forEach(r=>{this._removeInternalSync(r,t)})}onChange(e){return this.onChangeCbs.push(e),()=>{this.onChangeCbs=this.onChangeCbs.filter(t=>t!==e)}}triggerChange(e,t){for(let r of this.onChangeCbs)try{let n=r(e,t);n instanceof Promise&&n.catch(s=>console.error("[stosh] Error in onChange callback:",s))}catch(n){console.error("[stosh] Error in onChange callback:",n)}}};function N(a){return new T(a)}N.isSSR=T.isSSR;return V(H);})();
